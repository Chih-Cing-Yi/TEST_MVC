// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using TEST_MVC.Models.ViewModels;

namespace TEST_MVC.Models;

public partial class WebAPIContext : DbContext
{
    public WebAPIContext(DbContextOptions<WebAPIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<OrderD> OrderDs { get; set; }

    public virtual DbSet<OrderM> OrderMs { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductType> ProductTypes { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.ToTable("Customer");

            entity.Property(e => e.Addr).HasMaxLength(50);
            entity.Property(e => e.CreactDate).HasColumnType("date");
            entity.Property(e => e.CreactUser).HasMaxLength(25);
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUser).HasMaxLength(25);
            entity.Property(e => e.Name).HasMaxLength(25);
            entity.Property(e => e.Tel).HasMaxLength(25);
        });

        modelBuilder.Entity<OrderD>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.ItemNo });

            entity.ToTable("OrderD");

            entity.Property(e => e.Id)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<OrderM>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Order_1");

            entity.ToTable("OrderM");

            entity.Property(e => e.Id)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreactDate).HasColumnType("date");
            entity.Property(e => e.CreactUser).HasMaxLength(25);
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUser).HasMaxLength(25);
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Products");

            entity.ToTable("Product");

            entity.Property(e => e.CreatDate).HasColumnType("date");
            entity.Property(e => e.CreatUser)
                .IsRequired()
                .HasMaxLength(25);
            entity.Property(e => e.EditDate).HasColumnType("date");
            entity.Property(e => e.EditUser).HasMaxLength(25);
            entity.Property(e => e.ImageUrl).HasMaxLength(250);
            entity.Property(e => e.Name).HasMaxLength(25);
        });

        modelBuilder.Entity<ProductType>(entity =>
        {
            entity.ToTable("ProductType");

            entity.Property(e => e.CreatDate).HasColumnType("datetime");
            entity.Property(e => e.CreatUser).HasMaxLength(25);
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUser).HasMaxLength(25);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(25);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("User");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(25);
            entity.Property(e => e.PassWord)
                .IsRequired()
                .HasMaxLength(25);
            entity.Property(e => e.Role).HasMaxLength(25);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    public DbSet<TEST_MVC.Models.ViewModels.OrderVM2> OrderVM2 { get; set; }
}